{"ast":null,"code":"import { createElement, PureComponent } from 'react';\nimport DraggableRoot from 'react-draggable';\nimport { Resizable } from 're-resizable';\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\n\nvar extendStatics = function (d, b) {\n  extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n\n  return extendStatics(d, b);\n};\n\nfunction __extends(d, b) {\n  extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n\nvar Draggable = DraggableRoot;\nvar resizableStyle = {\n  width: \"auto\",\n  height: \"auto\",\n  display: \"inline-block\",\n  position: \"absolute\",\n  top: 0,\n  left: 0\n};\n\nvar getEnableResizingByFlag = function (flag) {\n  return {\n    bottom: flag,\n    bottomLeft: flag,\n    bottomRight: flag,\n    left: flag,\n    right: flag,\n    top: flag,\n    topLeft: flag,\n    topRight: flag\n  };\n};\n\nvar Rnd =\n/** @class */\nfunction (_super) {\n  __extends(Rnd, _super);\n\n  function Rnd(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.resizing = false;\n    _this.resizingPosition = {\n      x: 0,\n      y: 0\n    };\n    _this.offsetFromParent = {\n      left: 0,\n      top: 0\n    };\n\n    _this.refDraggable = function (c) {\n      if (!c) return;\n      _this.draggable = c;\n    };\n\n    _this.refResizable = function (c) {\n      if (!c) return;\n      _this.resizable = c;\n    };\n\n    _this.state = {\n      original: {\n        x: 0,\n        y: 0\n      },\n      bounds: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      },\n      maxWidth: props.maxWidth,\n      maxHeight: props.maxHeight\n    };\n    _this.onResizeStart = _this.onResizeStart.bind(_this);\n    _this.onResize = _this.onResize.bind(_this);\n    _this.onResizeStop = _this.onResizeStop.bind(_this);\n    _this.onDragStart = _this.onDragStart.bind(_this);\n    _this.onDrag = _this.onDrag.bind(_this);\n    _this.onDragStop = _this.onDragStop.bind(_this);\n    _this.getMaxSizesFromProps = _this.getMaxSizesFromProps.bind(_this);\n    return _this;\n  }\n\n  Rnd.prototype.componentDidMount = function () {\n    this.updateOffsetFromParent();\n    var _a = this.offsetFromParent,\n        left = _a.left,\n        top = _a.top;\n\n    var _b = this.getDraggablePosition(),\n        x = _b.x,\n        y = _b.y;\n\n    this.draggable.setState({\n      x: x - left,\n      y: y - top\n    }); // HACK: Apply position adjustment\n\n    this.forceUpdate();\n  }; // HACK: To get `react-draggable` state x and y.\n\n\n  Rnd.prototype.getDraggablePosition = function () {\n    var _a = this.draggable.state,\n        x = _a.x,\n        y = _a.y;\n    return {\n      x: x,\n      y: y\n    };\n  };\n\n  Rnd.prototype.getParent = function () {\n    return this.resizable && this.resizable.parentNode;\n  };\n\n  Rnd.prototype.getParentSize = function () {\n    return this.resizable.getParentSize();\n  };\n\n  Rnd.prototype.getMaxSizesFromProps = function () {\n    var maxWidth = typeof this.props.maxWidth === \"undefined\" ? Number.MAX_SAFE_INTEGER : this.props.maxWidth;\n    var maxHeight = typeof this.props.maxHeight === \"undefined\" ? Number.MAX_SAFE_INTEGER : this.props.maxHeight;\n    return {\n      maxWidth: maxWidth,\n      maxHeight: maxHeight\n    };\n  };\n\n  Rnd.prototype.getSelfElement = function () {\n    return this.resizable && this.resizable.resizable;\n  };\n\n  Rnd.prototype.getOffsetHeight = function (boundary) {\n    var scale = this.props.scale;\n\n    switch (this.props.bounds) {\n      case \"window\":\n        return window.innerHeight / scale;\n\n      case \"body\":\n        return document.body.offsetHeight / scale;\n\n      default:\n        return boundary.offsetHeight;\n    }\n  };\n\n  Rnd.prototype.getOffsetWidth = function (boundary) {\n    var scale = this.props.scale;\n\n    switch (this.props.bounds) {\n      case \"window\":\n        return window.innerWidth / scale;\n\n      case \"body\":\n        return document.body.offsetWidth / scale;\n\n      default:\n        return boundary.offsetWidth;\n    }\n  };\n\n  Rnd.prototype.onDragStart = function (e, data) {\n    if (this.props.onDragStart) {\n      this.props.onDragStart(e, data);\n    }\n\n    if (!this.props.bounds) return;\n    var parent = this.getParent();\n    var scale = this.props.scale;\n    var boundary;\n\n    if (this.props.bounds === \"parent\") {\n      boundary = parent;\n    } else if (this.props.bounds === \"body\") {\n      var parentRect_1 = parent.getBoundingClientRect();\n      var parentLeft_1 = parentRect_1.left;\n      var parentTop_1 = parentRect_1.top;\n      var bodyRect = document.body.getBoundingClientRect();\n      var left_1 = -(parentLeft_1 - parent.offsetLeft * scale - bodyRect.left) / scale;\n      var top_1 = -(parentTop_1 - parent.offsetTop * scale - bodyRect.top) / scale;\n      var right = (document.body.offsetWidth - this.resizable.size.width * scale) / scale + left_1;\n      var bottom = (document.body.offsetHeight - this.resizable.size.height * scale) / scale + top_1;\n      return this.setState({\n        bounds: {\n          top: top_1,\n          right: right,\n          bottom: bottom,\n          left: left_1\n        }\n      });\n    } else if (this.props.bounds === \"window\") {\n      if (!this.resizable) return;\n      var parentRect_2 = parent.getBoundingClientRect();\n      var parentLeft_2 = parentRect_2.left;\n      var parentTop_2 = parentRect_2.top;\n      var left_2 = -(parentLeft_2 - parent.offsetLeft * scale) / scale;\n      var top_2 = -(parentTop_2 - parent.offsetTop * scale) / scale;\n      var right = (window.innerWidth - this.resizable.size.width * scale) / scale + left_2;\n      var bottom = (window.innerHeight - this.resizable.size.height * scale) / scale + top_2;\n      return this.setState({\n        bounds: {\n          top: top_2,\n          right: right,\n          bottom: bottom,\n          left: left_2\n        }\n      });\n    } else {\n      boundary = document.querySelector(this.props.bounds);\n    }\n\n    if (!(boundary instanceof HTMLElement) || !(parent instanceof HTMLElement)) {\n      return;\n    }\n\n    var boundaryRect = boundary.getBoundingClientRect();\n    var boundaryLeft = boundaryRect.left;\n    var boundaryTop = boundaryRect.top;\n    var parentRect = parent.getBoundingClientRect();\n    var parentLeft = parentRect.left;\n    var parentTop = parentRect.top;\n    var left = (boundaryLeft - parentLeft) / scale;\n    var top = boundaryTop - parentTop;\n    if (!this.resizable) return;\n    this.updateOffsetFromParent();\n    var offset = this.offsetFromParent;\n    this.setState({\n      bounds: {\n        top: top - offset.top,\n        right: left + (boundary.offsetWidth - this.resizable.size.width) - offset.left / scale,\n        bottom: top + (boundary.offsetHeight - this.resizable.size.height) - offset.top,\n        left: left - offset.left / scale\n      }\n    });\n  };\n\n  Rnd.prototype.onDrag = function (e, data) {\n    if (this.props.onDrag) {\n      var offset = this.offsetFromParent;\n      return this.props.onDrag(e, __assign(__assign({}, data), {\n        x: data.x - offset.left,\n        y: data.y - offset.top\n      }));\n    }\n  };\n\n  Rnd.prototype.onDragStop = function (e, data) {\n    if (this.props.onDragStop) {\n      var _a = this.offsetFromParent,\n          left = _a.left,\n          top_3 = _a.top;\n      return this.props.onDragStop(e, __assign(__assign({}, data), {\n        x: data.x + left,\n        y: data.y + top_3\n      }));\n    }\n  };\n\n  Rnd.prototype.onResizeStart = function (e, dir, elementRef) {\n    e.stopPropagation();\n    this.resizing = true;\n    var scale = this.props.scale;\n    var offset = this.offsetFromParent;\n    var pos = this.getDraggablePosition();\n    this.resizingPosition = {\n      x: pos.x + offset.left,\n      y: pos.y + offset.top\n    };\n    this.setState({\n      original: pos\n    });\n\n    if (this.props.bounds) {\n      var parent_1 = this.getParent();\n      var boundary = void 0;\n\n      if (this.props.bounds === \"parent\") {\n        boundary = parent_1;\n      } else if (this.props.bounds === \"body\") {\n        boundary = document.body;\n      } else if (this.props.bounds === \"window\") {\n        boundary = window;\n      } else {\n        boundary = document.querySelector(this.props.bounds);\n      }\n\n      var self_1 = this.getSelfElement();\n\n      if (self_1 instanceof Element && (boundary instanceof HTMLElement || boundary === window) && parent_1 instanceof HTMLElement) {\n        var _a = this.getMaxSizesFromProps(),\n            maxWidth = _a.maxWidth,\n            maxHeight = _a.maxHeight;\n\n        var parentSize = this.getParentSize();\n\n        if (maxWidth && typeof maxWidth === \"string\") {\n          if (maxWidth.endsWith(\"%\")) {\n            var ratio = Number(maxWidth.replace(\"%\", \"\")) / 100;\n            maxWidth = parentSize.width * ratio;\n          } else if (maxWidth.endsWith(\"px\")) {\n            maxWidth = Number(maxWidth.replace(\"px\", \"\"));\n          }\n        }\n\n        if (maxHeight && typeof maxHeight === \"string\") {\n          if (maxHeight.endsWith(\"%\")) {\n            var ratio = Number(maxHeight.replace(\"%\", \"\")) / 100;\n            maxHeight = parentSize.width * ratio;\n          } else if (maxHeight.endsWith(\"px\")) {\n            maxHeight = Number(maxHeight.replace(\"px\", \"\"));\n          }\n        }\n\n        var selfRect = self_1.getBoundingClientRect();\n        var selfLeft = selfRect.left;\n        var selfTop = selfRect.top;\n        var boundaryRect = this.props.bounds === \"window\" ? {\n          left: 0,\n          top: 0\n        } : boundary.getBoundingClientRect();\n        var boundaryLeft = boundaryRect.left;\n        var boundaryTop = boundaryRect.top;\n        var offsetWidth = this.getOffsetWidth(boundary);\n        var offsetHeight = this.getOffsetHeight(boundary);\n        var hasLeft = dir.toLowerCase().endsWith(\"left\");\n        var hasRight = dir.toLowerCase().endsWith(\"right\");\n        var hasTop = dir.startsWith(\"top\");\n        var hasBottom = dir.startsWith(\"bottom\");\n\n        if (hasLeft && this.resizable) {\n          var max = (selfLeft - boundaryLeft) / scale + this.resizable.size.width;\n          this.setState({\n            maxWidth: max > Number(maxWidth) ? maxWidth : max\n          });\n        } // INFO: To set bounds in `lock aspect ratio with bounds` case. See also that story.\n\n\n        if (hasRight || this.props.lockAspectRatio && !hasLeft) {\n          var max = offsetWidth + (boundaryLeft - selfLeft) / scale;\n          this.setState({\n            maxWidth: max > Number(maxWidth) ? maxWidth : max\n          });\n        }\n\n        if (hasTop && this.resizable) {\n          var max = (selfTop - boundaryTop) / scale + this.resizable.size.height;\n          this.setState({\n            maxHeight: max > Number(maxHeight) ? maxHeight : max\n          });\n        } // INFO: To set bounds in `lock aspect ratio with bounds` case. See also that story.\n\n\n        if (hasBottom || this.props.lockAspectRatio && !hasTop) {\n          var max = offsetHeight + (boundaryTop - selfTop) / scale;\n          this.setState({\n            maxHeight: max > Number(maxHeight) ? maxHeight : max\n          });\n        }\n      }\n    } else {\n      this.setState({\n        maxWidth: this.props.maxWidth,\n        maxHeight: this.props.maxHeight\n      });\n    }\n\n    if (this.props.onResizeStart) {\n      this.props.onResizeStart(e, dir, elementRef);\n    }\n  };\n\n  Rnd.prototype.onResize = function (e, direction, elementRef, delta) {\n    if (/left/i.test(direction)) {\n      var x_1 = this.state.original.x - delta.width; // INFO: Apply x position by resize to draggable.\n\n      this.draggable.setState({\n        x: x_1\n      });\n    }\n\n    if (/top/i.test(direction)) {\n      var y_1 = this.state.original.y - delta.height; // INFO: Apply x position by resize to draggable.\n\n      this.draggable.setState({\n        y: y_1\n      });\n    }\n\n    this.updateOffsetFromParent();\n    var offset = this.offsetFromParent;\n    var x = this.getDraggablePosition().x + offset.left;\n    var y = this.getDraggablePosition().y + offset.top;\n    this.resizingPosition = {\n      x: x,\n      y: y\n    };\n    if (!this.props.onResize) return;\n    this.props.onResize(e, direction, elementRef, delta, {\n      x: x,\n      y: y\n    });\n  };\n\n  Rnd.prototype.onResizeStop = function (e, direction, elementRef, delta) {\n    this.resizing = false;\n\n    var _a = this.getMaxSizesFromProps(),\n        maxWidth = _a.maxWidth,\n        maxHeight = _a.maxHeight;\n\n    this.setState({\n      maxWidth: maxWidth,\n      maxHeight: maxHeight\n    });\n\n    if (this.props.onResizeStop) {\n      this.props.onResizeStop(e, direction, elementRef, delta, this.resizingPosition);\n    }\n  };\n\n  Rnd.prototype.updateSize = function (size) {\n    if (!this.resizable) return;\n    this.resizable.updateSize({\n      width: size.width,\n      height: size.height\n    });\n  };\n\n  Rnd.prototype.updatePosition = function (position) {\n    this.draggable.setState(position);\n  };\n\n  Rnd.prototype.updateOffsetFromParent = function () {\n    var scale = this.props.scale;\n    var parent = this.getParent();\n    var self = this.getSelfElement();\n\n    if (!parent || self === null) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n\n    var parentRect = parent.getBoundingClientRect();\n    var parentLeft = parentRect.left;\n    var parentTop = parentRect.top;\n    var selfRect = self.getBoundingClientRect();\n    var position = this.getDraggablePosition();\n    this.offsetFromParent = {\n      left: selfRect.left - parentLeft - position.x * scale,\n      top: selfRect.top - parentTop - position.y * scale\n    };\n  };\n\n  Rnd.prototype.render = function () {\n    var _a = this.props,\n        disableDragging = _a.disableDragging,\n        style = _a.style,\n        dragHandleClassName = _a.dragHandleClassName,\n        position = _a.position,\n        onMouseDown = _a.onMouseDown,\n        onMouseUp = _a.onMouseUp,\n        dragAxis = _a.dragAxis,\n        dragGrid = _a.dragGrid,\n        bounds = _a.bounds,\n        enableUserSelectHack = _a.enableUserSelectHack,\n        cancel = _a.cancel,\n        children = _a.children,\n        onResizeStart = _a.onResizeStart,\n        onResize = _a.onResize,\n        onResizeStop = _a.onResizeStop,\n        onDragStart = _a.onDragStart,\n        onDrag = _a.onDrag,\n        onDragStop = _a.onDragStop,\n        resizeHandleStyles = _a.resizeHandleStyles,\n        resizeHandleClasses = _a.resizeHandleClasses,\n        resizeHandleComponent = _a.resizeHandleComponent,\n        enableResizing = _a.enableResizing,\n        resizeGrid = _a.resizeGrid,\n        resizeHandleWrapperClass = _a.resizeHandleWrapperClass,\n        resizeHandleWrapperStyle = _a.resizeHandleWrapperStyle,\n        scale = _a.scale,\n        allowAnyClick = _a.allowAnyClick,\n        nodeRef = _a.nodeRef,\n        resizableProps = __rest(_a, [\"disableDragging\", \"style\", \"dragHandleClassName\", \"position\", \"onMouseDown\", \"onMouseUp\", \"dragAxis\", \"dragGrid\", \"bounds\", \"enableUserSelectHack\", \"cancel\", \"children\", \"onResizeStart\", \"onResize\", \"onResizeStop\", \"onDragStart\", \"onDrag\", \"onDragStop\", \"resizeHandleStyles\", \"resizeHandleClasses\", \"resizeHandleComponent\", \"enableResizing\", \"resizeGrid\", \"resizeHandleWrapperClass\", \"resizeHandleWrapperStyle\", \"scale\", \"allowAnyClick\", \"nodeRef\"]);\n\n    var defaultValue = this.props.default ? __assign({}, this.props.default) : undefined; // Remove unknown props, see also https://reactjs.org/warnings/unknown-prop.html\n\n    delete resizableProps.default;\n    var cursorStyle = disableDragging || dragHandleClassName ? {\n      cursor: \"auto\"\n    } : {\n      cursor: \"move\"\n    };\n\n    var innerStyle = __assign(__assign(__assign({}, resizableStyle), cursorStyle), style);\n\n    var _b = this.offsetFromParent,\n        left = _b.left,\n        top = _b.top;\n    var draggablePosition;\n\n    if (position) {\n      draggablePosition = {\n        x: position.x - left,\n        y: position.y - top\n      };\n    } // INFO: Make uncontorolled component when resizing to control position by setPostion.\n\n\n    var pos = this.resizing ? undefined : draggablePosition;\n    return createElement(Draggable, {\n      ref: this.refDraggable,\n      handle: dragHandleClassName ? \".\" + dragHandleClassName : undefined,\n      defaultPosition: defaultValue,\n      onMouseDown: onMouseDown,\n      onMouseUp: onMouseUp,\n      onStart: this.onDragStart,\n      onDrag: this.onDrag,\n      onStop: this.onDragStop,\n      axis: dragAxis,\n      disabled: disableDragging,\n      grid: dragGrid,\n      bounds: bounds ? this.state.bounds : undefined,\n      position: pos,\n      enableUserSelectHack: enableUserSelectHack,\n      cancel: cancel,\n      scale: scale,\n      allowAnyClick: allowAnyClick,\n      nodeRef: {\n        current: this.getSelfElement()\n      }\n    }, createElement(Resizable, __assign({}, resizableProps, {\n      ref: this.refResizable,\n      defaultSize: defaultValue,\n      size: this.props.size,\n      enable: typeof enableResizing === \"boolean\" ? getEnableResizingByFlag(enableResizing) : enableResizing,\n      onResizeStart: this.onResizeStart,\n      onResize: this.onResize,\n      onResizeStop: this.onResizeStop,\n      style: innerStyle,\n      minWidth: this.props.minWidth,\n      minHeight: this.props.minHeight,\n      maxWidth: this.resizing ? this.state.maxWidth : this.props.maxWidth,\n      maxHeight: this.resizing ? this.state.maxHeight : this.props.maxHeight,\n      grid: resizeGrid,\n      handleWrapperClass: resizeHandleWrapperClass,\n      handleWrapperStyle: resizeHandleWrapperStyle,\n      lockAspectRatio: this.props.lockAspectRatio,\n      lockAspectRatioExtraWidth: this.props.lockAspectRatioExtraWidth,\n      lockAspectRatioExtraHeight: this.props.lockAspectRatioExtraHeight,\n      handleStyles: resizeHandleStyles,\n      handleClasses: resizeHandleClasses,\n      handleComponent: resizeHandleComponent,\n      scale: this.props.scale\n    }), children));\n  };\n\n  Rnd.defaultProps = {\n    maxWidth: Number.MAX_SAFE_INTEGER,\n    maxHeight: Number.MAX_SAFE_INTEGER,\n    scale: 1,\n    onResizeStart: function () {},\n    onResize: function () {},\n    onResizeStop: function () {},\n    onDragStart: function () {},\n    onDrag: function () {},\n    onDragStop: function () {}\n  };\n  return Rnd;\n}(PureComponent);\n\nexport { Rnd };","map":{"version":3,"sources":["/home/sgn13/Documents/React/season1/node_modules/react-rnd/lib/index.js"],"names":["createElement","PureComponent","DraggableRoot","Resizable","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","Draggable","resizableStyle","width","height","display","position","top","left","getEnableResizingByFlag","flag","bottom","bottomLeft","bottomRight","right","topLeft","topRight","Rnd","_super","props","_this","resizing","resizingPosition","x","y","offsetFromParent","refDraggable","c","draggable","refResizable","resizable","state","original","bounds","maxWidth","maxHeight","onResizeStart","bind","onResize","onResizeStop","onDragStart","onDrag","onDragStop","getMaxSizesFromProps","componentDidMount","updateOffsetFromParent","_a","_b","getDraggablePosition","setState","forceUpdate","getParent","parentNode","getParentSize","Number","MAX_SAFE_INTEGER","getSelfElement","getOffsetHeight","boundary","scale","window","innerHeight","document","body","offsetHeight","getOffsetWidth","innerWidth","offsetWidth","data","parent","parentRect_1","getBoundingClientRect","parentLeft_1","parentTop_1","bodyRect","left_1","offsetLeft","top_1","offsetTop","size","parentRect_2","parentLeft_2","parentTop_2","left_2","top_2","querySelector","HTMLElement","boundaryRect","boundaryLeft","boundaryTop","parentRect","parentLeft","parentTop","offset","top_3","dir","elementRef","stopPropagation","pos","parent_1","self_1","Element","parentSize","endsWith","ratio","replace","selfRect","selfLeft","selfTop","hasLeft","toLowerCase","hasRight","hasTop","startsWith","hasBottom","max","lockAspectRatio","direction","delta","test","x_1","y_1","updateSize","updatePosition","self","render","disableDragging","style","dragHandleClassName","onMouseDown","onMouseUp","dragAxis","dragGrid","enableUserSelectHack","cancel","children","resizeHandleStyles","resizeHandleClasses","resizeHandleComponent","enableResizing","resizeGrid","resizeHandleWrapperClass","resizeHandleWrapperStyle","allowAnyClick","nodeRef","resizableProps","defaultValue","default","undefined","cursorStyle","cursor","innerStyle","draggablePosition","ref","handle","defaultPosition","onStart","onStop","axis","disabled","grid","current","defaultSize","enable","minWidth","minHeight","handleWrapperClass","handleWrapperStyle","lockAspectRatioExtraWidth","lockAspectRatioExtraHeight","handleStyles","handleClasses","handleComponent","defaultProps"],"mappings":"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","sourcesContent":["import { createElement, PureComponent } from 'react';\nimport DraggableRoot from 'react-draggable';\nimport { Resizable } from 're-resizable';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nvar Draggable = DraggableRoot;\r\nvar resizableStyle = {\r\n    width: \"auto\",\r\n    height: \"auto\",\r\n    display: \"inline-block\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n};\r\nvar getEnableResizingByFlag = function (flag) { return ({\r\n    bottom: flag,\r\n    bottomLeft: flag,\r\n    bottomRight: flag,\r\n    left: flag,\r\n    right: flag,\r\n    top: flag,\r\n    topLeft: flag,\r\n    topRight: flag,\r\n}); };\r\nvar Rnd = /** @class */ (function (_super) {\r\n    __extends(Rnd, _super);\r\n    function Rnd(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.resizing = false;\r\n        _this.resizingPosition = { x: 0, y: 0 };\r\n        _this.offsetFromParent = { left: 0, top: 0 };\r\n        _this.refDraggable = function (c) {\r\n            if (!c)\r\n                return;\r\n            _this.draggable = c;\r\n        };\r\n        _this.refResizable = function (c) {\r\n            if (!c)\r\n                return;\r\n            _this.resizable = c;\r\n        };\r\n        _this.state = {\r\n            original: {\r\n                x: 0,\r\n                y: 0,\r\n            },\r\n            bounds: {\r\n                top: 0,\r\n                right: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n            },\r\n            maxWidth: props.maxWidth,\r\n            maxHeight: props.maxHeight,\r\n        };\r\n        _this.onResizeStart = _this.onResizeStart.bind(_this);\r\n        _this.onResize = _this.onResize.bind(_this);\r\n        _this.onResizeStop = _this.onResizeStop.bind(_this);\r\n        _this.onDragStart = _this.onDragStart.bind(_this);\r\n        _this.onDrag = _this.onDrag.bind(_this);\r\n        _this.onDragStop = _this.onDragStop.bind(_this);\r\n        _this.getMaxSizesFromProps = _this.getMaxSizesFromProps.bind(_this);\r\n        return _this;\r\n    }\r\n    Rnd.prototype.componentDidMount = function () {\r\n        this.updateOffsetFromParent();\r\n        var _a = this.offsetFromParent, left = _a.left, top = _a.top;\r\n        var _b = this.getDraggablePosition(), x = _b.x, y = _b.y;\r\n        this.draggable.setState({\r\n            x: x - left,\r\n            y: y - top,\r\n        });\r\n        // HACK: Apply position adjustment\r\n        this.forceUpdate();\r\n    };\r\n    // HACK: To get `react-draggable` state x and y.\r\n    Rnd.prototype.getDraggablePosition = function () {\r\n        var _a = this.draggable.state, x = _a.x, y = _a.y;\r\n        return { x: x, y: y };\r\n    };\r\n    Rnd.prototype.getParent = function () {\r\n        return this.resizable && this.resizable.parentNode;\r\n    };\r\n    Rnd.prototype.getParentSize = function () {\r\n        return this.resizable.getParentSize();\r\n    };\r\n    Rnd.prototype.getMaxSizesFromProps = function () {\r\n        var maxWidth = typeof this.props.maxWidth === \"undefined\" ? Number.MAX_SAFE_INTEGER : this.props.maxWidth;\r\n        var maxHeight = typeof this.props.maxHeight === \"undefined\" ? Number.MAX_SAFE_INTEGER : this.props.maxHeight;\r\n        return { maxWidth: maxWidth, maxHeight: maxHeight };\r\n    };\r\n    Rnd.prototype.getSelfElement = function () {\r\n        return this.resizable && this.resizable.resizable;\r\n    };\r\n    Rnd.prototype.getOffsetHeight = function (boundary) {\r\n        var scale = this.props.scale;\r\n        switch (this.props.bounds) {\r\n            case \"window\":\r\n                return window.innerHeight / scale;\r\n            case \"body\":\r\n                return document.body.offsetHeight / scale;\r\n            default:\r\n                return boundary.offsetHeight;\r\n        }\r\n    };\r\n    Rnd.prototype.getOffsetWidth = function (boundary) {\r\n        var scale = this.props.scale;\r\n        switch (this.props.bounds) {\r\n            case \"window\":\r\n                return window.innerWidth / scale;\r\n            case \"body\":\r\n                return document.body.offsetWidth / scale;\r\n            default:\r\n                return boundary.offsetWidth;\r\n        }\r\n    };\r\n    Rnd.prototype.onDragStart = function (e, data) {\r\n        if (this.props.onDragStart) {\r\n            this.props.onDragStart(e, data);\r\n        }\r\n        if (!this.props.bounds)\r\n            return;\r\n        var parent = this.getParent();\r\n        var scale = this.props.scale;\r\n        var boundary;\r\n        if (this.props.bounds === \"parent\") {\r\n            boundary = parent;\r\n        }\r\n        else if (this.props.bounds === \"body\") {\r\n            var parentRect_1 = parent.getBoundingClientRect();\r\n            var parentLeft_1 = parentRect_1.left;\r\n            var parentTop_1 = parentRect_1.top;\r\n            var bodyRect = document.body.getBoundingClientRect();\r\n            var left_1 = -(parentLeft_1 - parent.offsetLeft * scale - bodyRect.left) / scale;\r\n            var top_1 = -(parentTop_1 - parent.offsetTop * scale - bodyRect.top) / scale;\r\n            var right = (document.body.offsetWidth - this.resizable.size.width * scale) / scale + left_1;\r\n            var bottom = (document.body.offsetHeight - this.resizable.size.height * scale) / scale + top_1;\r\n            return this.setState({ bounds: { top: top_1, right: right, bottom: bottom, left: left_1 } });\r\n        }\r\n        else if (this.props.bounds === \"window\") {\r\n            if (!this.resizable)\r\n                return;\r\n            var parentRect_2 = parent.getBoundingClientRect();\r\n            var parentLeft_2 = parentRect_2.left;\r\n            var parentTop_2 = parentRect_2.top;\r\n            var left_2 = -(parentLeft_2 - parent.offsetLeft * scale) / scale;\r\n            var top_2 = -(parentTop_2 - parent.offsetTop * scale) / scale;\r\n            var right = (window.innerWidth - this.resizable.size.width * scale) / scale + left_2;\r\n            var bottom = (window.innerHeight - this.resizable.size.height * scale) / scale + top_2;\r\n            return this.setState({ bounds: { top: top_2, right: right, bottom: bottom, left: left_2 } });\r\n        }\r\n        else {\r\n            boundary = document.querySelector(this.props.bounds);\r\n        }\r\n        if (!(boundary instanceof HTMLElement) || !(parent instanceof HTMLElement)) {\r\n            return;\r\n        }\r\n        var boundaryRect = boundary.getBoundingClientRect();\r\n        var boundaryLeft = boundaryRect.left;\r\n        var boundaryTop = boundaryRect.top;\r\n        var parentRect = parent.getBoundingClientRect();\r\n        var parentLeft = parentRect.left;\r\n        var parentTop = parentRect.top;\r\n        var left = (boundaryLeft - parentLeft) / scale;\r\n        var top = boundaryTop - parentTop;\r\n        if (!this.resizable)\r\n            return;\r\n        this.updateOffsetFromParent();\r\n        var offset = this.offsetFromParent;\r\n        this.setState({\r\n            bounds: {\r\n                top: top - offset.top,\r\n                right: left + (boundary.offsetWidth - this.resizable.size.width) - offset.left / scale,\r\n                bottom: top + (boundary.offsetHeight - this.resizable.size.height) - offset.top,\r\n                left: left - offset.left / scale,\r\n            },\r\n        });\r\n    };\r\n    Rnd.prototype.onDrag = function (e, data) {\r\n        if (this.props.onDrag) {\r\n            var offset = this.offsetFromParent;\r\n            return this.props.onDrag(e, __assign(__assign({}, data), { x: data.x - offset.left, y: data.y - offset.top }));\r\n        }\r\n    };\r\n    Rnd.prototype.onDragStop = function (e, data) {\r\n        if (this.props.onDragStop) {\r\n            var _a = this.offsetFromParent, left = _a.left, top_3 = _a.top;\r\n            return this.props.onDragStop(e, __assign(__assign({}, data), { x: data.x + left, y: data.y + top_3 }));\r\n        }\r\n    };\r\n    Rnd.prototype.onResizeStart = function (e, dir, elementRef) {\r\n        e.stopPropagation();\r\n        this.resizing = true;\r\n        var scale = this.props.scale;\r\n        var offset = this.offsetFromParent;\r\n        var pos = this.getDraggablePosition();\r\n        this.resizingPosition = { x: pos.x + offset.left, y: pos.y + offset.top };\r\n        this.setState({\r\n            original: pos,\r\n        });\r\n        if (this.props.bounds) {\r\n            var parent_1 = this.getParent();\r\n            var boundary = void 0;\r\n            if (this.props.bounds === \"parent\") {\r\n                boundary = parent_1;\r\n            }\r\n            else if (this.props.bounds === \"body\") {\r\n                boundary = document.body;\r\n            }\r\n            else if (this.props.bounds === \"window\") {\r\n                boundary = window;\r\n            }\r\n            else {\r\n                boundary = document.querySelector(this.props.bounds);\r\n            }\r\n            var self_1 = this.getSelfElement();\r\n            if (self_1 instanceof Element &&\r\n                (boundary instanceof HTMLElement || boundary === window) &&\r\n                parent_1 instanceof HTMLElement) {\r\n                var _a = this.getMaxSizesFromProps(), maxWidth = _a.maxWidth, maxHeight = _a.maxHeight;\r\n                var parentSize = this.getParentSize();\r\n                if (maxWidth && typeof maxWidth === \"string\") {\r\n                    if (maxWidth.endsWith(\"%\")) {\r\n                        var ratio = Number(maxWidth.replace(\"%\", \"\")) / 100;\r\n                        maxWidth = parentSize.width * ratio;\r\n                    }\r\n                    else if (maxWidth.endsWith(\"px\")) {\r\n                        maxWidth = Number(maxWidth.replace(\"px\", \"\"));\r\n                    }\r\n                }\r\n                if (maxHeight && typeof maxHeight === \"string\") {\r\n                    if (maxHeight.endsWith(\"%\")) {\r\n                        var ratio = Number(maxHeight.replace(\"%\", \"\")) / 100;\r\n                        maxHeight = parentSize.width * ratio;\r\n                    }\r\n                    else if (maxHeight.endsWith(\"px\")) {\r\n                        maxHeight = Number(maxHeight.replace(\"px\", \"\"));\r\n                    }\r\n                }\r\n                var selfRect = self_1.getBoundingClientRect();\r\n                var selfLeft = selfRect.left;\r\n                var selfTop = selfRect.top;\r\n                var boundaryRect = this.props.bounds === \"window\" ? { left: 0, top: 0 } : boundary.getBoundingClientRect();\r\n                var boundaryLeft = boundaryRect.left;\r\n                var boundaryTop = boundaryRect.top;\r\n                var offsetWidth = this.getOffsetWidth(boundary);\r\n                var offsetHeight = this.getOffsetHeight(boundary);\r\n                var hasLeft = dir.toLowerCase().endsWith(\"left\");\r\n                var hasRight = dir.toLowerCase().endsWith(\"right\");\r\n                var hasTop = dir.startsWith(\"top\");\r\n                var hasBottom = dir.startsWith(\"bottom\");\r\n                if (hasLeft && this.resizable) {\r\n                    var max = (selfLeft - boundaryLeft) / scale + this.resizable.size.width;\r\n                    this.setState({ maxWidth: max > Number(maxWidth) ? maxWidth : max });\r\n                }\r\n                // INFO: To set bounds in `lock aspect ratio with bounds` case. See also that story.\r\n                if (hasRight || (this.props.lockAspectRatio && !hasLeft)) {\r\n                    var max = offsetWidth + (boundaryLeft - selfLeft) / scale;\r\n                    this.setState({ maxWidth: max > Number(maxWidth) ? maxWidth : max });\r\n                }\r\n                if (hasTop && this.resizable) {\r\n                    var max = (selfTop - boundaryTop) / scale + this.resizable.size.height;\r\n                    this.setState({\r\n                        maxHeight: max > Number(maxHeight) ? maxHeight : max,\r\n                    });\r\n                }\r\n                // INFO: To set bounds in `lock aspect ratio with bounds` case. See also that story.\r\n                if (hasBottom || (this.props.lockAspectRatio && !hasTop)) {\r\n                    var max = offsetHeight + (boundaryTop - selfTop) / scale;\r\n                    this.setState({\r\n                        maxHeight: max > Number(maxHeight) ? maxHeight : max,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.setState({\r\n                maxWidth: this.props.maxWidth,\r\n                maxHeight: this.props.maxHeight,\r\n            });\r\n        }\r\n        if (this.props.onResizeStart) {\r\n            this.props.onResizeStart(e, dir, elementRef);\r\n        }\r\n    };\r\n    Rnd.prototype.onResize = function (e, direction, elementRef, delta) {\r\n        if (/left/i.test(direction)) {\r\n            var x_1 = this.state.original.x - delta.width;\r\n            // INFO: Apply x position by resize to draggable.\r\n            this.draggable.setState({ x: x_1 });\r\n        }\r\n        if (/top/i.test(direction)) {\r\n            var y_1 = this.state.original.y - delta.height;\r\n            // INFO: Apply x position by resize to draggable.\r\n            this.draggable.setState({ y: y_1 });\r\n        }\r\n        this.updateOffsetFromParent();\r\n        var offset = this.offsetFromParent;\r\n        var x = this.getDraggablePosition().x + offset.left;\r\n        var y = this.getDraggablePosition().y + offset.top;\r\n        this.resizingPosition = { x: x, y: y };\r\n        if (!this.props.onResize)\r\n            return;\r\n        this.props.onResize(e, direction, elementRef, delta, {\r\n            x: x,\r\n            y: y,\r\n        });\r\n    };\r\n    Rnd.prototype.onResizeStop = function (e, direction, elementRef, delta) {\r\n        this.resizing = false;\r\n        var _a = this.getMaxSizesFromProps(), maxWidth = _a.maxWidth, maxHeight = _a.maxHeight;\r\n        this.setState({ maxWidth: maxWidth, maxHeight: maxHeight });\r\n        if (this.props.onResizeStop) {\r\n            this.props.onResizeStop(e, direction, elementRef, delta, this.resizingPosition);\r\n        }\r\n    };\r\n    Rnd.prototype.updateSize = function (size) {\r\n        if (!this.resizable)\r\n            return;\r\n        this.resizable.updateSize({ width: size.width, height: size.height });\r\n    };\r\n    Rnd.prototype.updatePosition = function (position) {\r\n        this.draggable.setState(position);\r\n    };\r\n    Rnd.prototype.updateOffsetFromParent = function () {\r\n        var scale = this.props.scale;\r\n        var parent = this.getParent();\r\n        var self = this.getSelfElement();\r\n        if (!parent || self === null) {\r\n            return {\r\n                top: 0,\r\n                left: 0,\r\n            };\r\n        }\r\n        var parentRect = parent.getBoundingClientRect();\r\n        var parentLeft = parentRect.left;\r\n        var parentTop = parentRect.top;\r\n        var selfRect = self.getBoundingClientRect();\r\n        var position = this.getDraggablePosition();\r\n        this.offsetFromParent = {\r\n            left: selfRect.left - parentLeft - position.x * scale,\r\n            top: selfRect.top - parentTop - position.y * scale,\r\n        };\r\n    };\r\n    Rnd.prototype.render = function () {\r\n        var _a = this.props, disableDragging = _a.disableDragging, style = _a.style, dragHandleClassName = _a.dragHandleClassName, position = _a.position, onMouseDown = _a.onMouseDown, onMouseUp = _a.onMouseUp, dragAxis = _a.dragAxis, dragGrid = _a.dragGrid, bounds = _a.bounds, enableUserSelectHack = _a.enableUserSelectHack, cancel = _a.cancel, children = _a.children, onResizeStart = _a.onResizeStart, onResize = _a.onResize, onResizeStop = _a.onResizeStop, onDragStart = _a.onDragStart, onDrag = _a.onDrag, onDragStop = _a.onDragStop, resizeHandleStyles = _a.resizeHandleStyles, resizeHandleClasses = _a.resizeHandleClasses, resizeHandleComponent = _a.resizeHandleComponent, enableResizing = _a.enableResizing, resizeGrid = _a.resizeGrid, resizeHandleWrapperClass = _a.resizeHandleWrapperClass, resizeHandleWrapperStyle = _a.resizeHandleWrapperStyle, scale = _a.scale, allowAnyClick = _a.allowAnyClick, nodeRef = _a.nodeRef, resizableProps = __rest(_a, [\"disableDragging\", \"style\", \"dragHandleClassName\", \"position\", \"onMouseDown\", \"onMouseUp\", \"dragAxis\", \"dragGrid\", \"bounds\", \"enableUserSelectHack\", \"cancel\", \"children\", \"onResizeStart\", \"onResize\", \"onResizeStop\", \"onDragStart\", \"onDrag\", \"onDragStop\", \"resizeHandleStyles\", \"resizeHandleClasses\", \"resizeHandleComponent\", \"enableResizing\", \"resizeGrid\", \"resizeHandleWrapperClass\", \"resizeHandleWrapperStyle\", \"scale\", \"allowAnyClick\", \"nodeRef\"]);\r\n        var defaultValue = this.props.default ? __assign({}, this.props.default) : undefined;\r\n        // Remove unknown props, see also https://reactjs.org/warnings/unknown-prop.html\r\n        delete resizableProps.default;\r\n        var cursorStyle = disableDragging || dragHandleClassName ? { cursor: \"auto\" } : { cursor: \"move\" };\r\n        var innerStyle = __assign(__assign(__assign({}, resizableStyle), cursorStyle), style);\r\n        var _b = this.offsetFromParent, left = _b.left, top = _b.top;\r\n        var draggablePosition;\r\n        if (position) {\r\n            draggablePosition = {\r\n                x: position.x - left,\r\n                y: position.y - top,\r\n            };\r\n        }\r\n        // INFO: Make uncontorolled component when resizing to control position by setPostion.\r\n        var pos = this.resizing ? undefined : draggablePosition;\r\n        return (createElement(Draggable, { ref: this.refDraggable, handle: dragHandleClassName ? \".\" + dragHandleClassName : undefined, defaultPosition: defaultValue, onMouseDown: onMouseDown, onMouseUp: onMouseUp, onStart: this.onDragStart, onDrag: this.onDrag, onStop: this.onDragStop, axis: dragAxis, disabled: disableDragging, grid: dragGrid, bounds: bounds ? this.state.bounds : undefined, position: pos, enableUserSelectHack: enableUserSelectHack, cancel: cancel, scale: scale, allowAnyClick: allowAnyClick, nodeRef: { current: this.getSelfElement() } },\r\n            createElement(Resizable, __assign({}, resizableProps, { ref: this.refResizable, defaultSize: defaultValue, size: this.props.size, enable: typeof enableResizing === \"boolean\" ? getEnableResizingByFlag(enableResizing) : enableResizing, onResizeStart: this.onResizeStart, onResize: this.onResize, onResizeStop: this.onResizeStop, style: innerStyle, minWidth: this.props.minWidth, minHeight: this.props.minHeight, maxWidth: this.resizing ? this.state.maxWidth : this.props.maxWidth, maxHeight: this.resizing ? this.state.maxHeight : this.props.maxHeight, grid: resizeGrid, handleWrapperClass: resizeHandleWrapperClass, handleWrapperStyle: resizeHandleWrapperStyle, lockAspectRatio: this.props.lockAspectRatio, lockAspectRatioExtraWidth: this.props.lockAspectRatioExtraWidth, lockAspectRatioExtraHeight: this.props.lockAspectRatioExtraHeight, handleStyles: resizeHandleStyles, handleClasses: resizeHandleClasses, handleComponent: resizeHandleComponent, scale: this.props.scale }), children)));\r\n    };\r\n    Rnd.defaultProps = {\r\n        maxWidth: Number.MAX_SAFE_INTEGER,\r\n        maxHeight: Number.MAX_SAFE_INTEGER,\r\n        scale: 1,\r\n        onResizeStart: function () { },\r\n        onResize: function () { },\r\n        onResizeStop: function () { },\r\n        onDragStart: function () { },\r\n        onDrag: function () { },\r\n        onDragStop: function () { },\r\n    };\r\n    return Rnd;\r\n}(PureComponent));\n\nexport { Rnd };\n"]},"metadata":{},"sourceType":"module"}